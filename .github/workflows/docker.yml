name: Docker Build and Push

on:
  workflow_call:
    inputs:
      registry:
        description: 'Container registry to push to'
        required: false
        default: 'ghcr.io'
        type: string
      image-name:
        description: 'Name of the Docker image'
        required: true
        type: string
      dockerfile-path:
        description: 'Path to Dockerfile'
        required: false
        default: './Dockerfile'
        type: string
      build-args:
        description: 'Build arguments for Docker build'
        required: false
        type: string
      push:
        description: 'Whether to push the image'
        required: false
        default: true
        type: boolean
      tags:
        description: 'Tags to apply to the image'
        required: false
        type: string
        default: 'latest'
    secrets:
      REGISTRY_USERNAME:
        required: false
      REGISTRY_PASSWORD:
        required: false

jobs:
  docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to container registry
      if: inputs.push
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.registry }}
        username: ${{ secrets.REGISTRY_USERNAME || github.actor }}
        password: ${{ secrets.REGISTRY_PASSWORD || github.token }}
    
    - name: Extract metadata for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ inputs.registry }}/${{ inputs.image-name }}
        tags: |
          type=raw,value=latest,enable={{is_default_branch}}
          type=sha,prefix={{branch}}-
          type=ref,event=branch
          type=ref,event=tag
          ${{ inputs.tags }}
    
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ${{ inputs.dockerfile-path }}
        push: ${{ inputs.push }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: ${{ inputs.build-args }}
        cache-from: type=gha
        cache-to: type=gha,mode=max